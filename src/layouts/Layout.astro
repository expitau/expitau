---
interface Props {
	title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Nathan's portfolio and blog" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title} - expitau.com</title>
		<link rel="preconnect" href="https://fonts.googleapis.com" />
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
		<link
			href="https://fonts.googleapis.com/css2?family=Inter:wght@100;200;300;400;500;600;700;800;900&display=swap"
			rel="stylesheet"
		/>
		<script>
			const blobElement = document.getElementById("blob");
			function updateBlob(x, y) {
				blobElement.animate(
					{
						left: `${x}px`,
						top: `${y}px`,
					},
					{ duration: 3000, fill: "forwards" },
				);
			}

			document.body.onpointermove = (event) => {
				const { clientX, clientY } = event;
				sessionStorage.setItem(
					"lastMousePosition",
					JSON.stringify({ x: clientX, y: clientY }),
				);
				updateBlob(clientX, clientY);
			};
			let { x, y } = JSON.parse(
				sessionStorage.getItem("lastMousePosition"),
			) || { x: 0, y: 0 };
			blobElement.style.left = `${x}px`;
			blobElement.style.top = `${y}px`;
		</script></head
	>

	<body>
		<div id="background">
			<div id="blob"></div>
			<div id="blur"></div>
		</div>
		<slot />
	</body>
</html>
<style is:global>
	main {
		padding-inline: 24rem;
	}

	@media (max-width: 1600px) {
		main {
			padding-inline: 16rem;
		}
	}

	@media (max-width: 1300px) {
		main {
			padding-inline: 8rem;
		}
	}

	@media (max-width: 720px) {
		main {
			padding-inline: 6rem;
		}
	}

	@media (max-width: 480px) {
		main {
			padding-inline: 1rem;
		}
	}
	h1 {
		font-weight: 700;
		/* letter-spacing: -1px; */
		font-size: 48px;
		color: var(--text);
		margin: 4rem 0 0.5rem 0;
	}

	h2 {
		font-weight: 600;
		font-size: 24px;
		color: var(--text);
		margin: 4rem 0 0.5rem 0;
	}

	h3 {
		font-weight: 500;
		font-size: 18px;
		color: var(--text);
		margin: 2rem 0 0.5rem 0;
	}

	strong {
		color: var(--text-secondary);
		font-weight: 600;
	}

	p {
		color: var(--text-secondary);
		line-height: 1.5em;
		margin-top: 0;
		letter-spacing: 0.01em;
		font-weight: 400;
	}

	img {
		border-radius: 0.5rem;
		margin: 0.2rem;
	}

	ul {
		margin: 0;
	}

	a {
		font-weight: 500;
		color: var(--text);
		text-decoration: none;
		cursor: pointer;
	}

	a:hover {
		text-decoration: underline;
		color: var(--accent);
		transition: color var(--transition-s) ease;
	}

	a.hyperlink {
		text-decoration: none;
		border-radius: 0.3rem;
		font-weight: normal;
		color: var(--text);
		display: flex;
		flex-direction: row;
		gap: 0.5rem;
		width: fit-content;
		margin: 0;
		align-items: center;
	}

	a.hyperlink:hover {
		color: var(--accent);
		transform: translate(0, -5%);
		transition: var(--transition-s) ease;
	}

	a.link {
		color: var(--accent);
		align-items: center;
		font-weight: normal;
		display: flex;
		flex-direction: row;
	}

	.sr-only {
		border: 0;
		padding: 0;
		margin: 0;
		position: absolute !important;
		height: 1px;
		width: 1px;
		overflow: hidden;
		clip: rect(1px 1px 1px 1px);
		clip: rect(1px, 1px, 1px, 1px);
		clip-path: inset(50%);
		white-space: nowrap;
	}
</style>
<style is:global>
	:root {
		--background: #0f172a;
		--text: #e1e7f0;
		--text-secondary: #b4bfcf;
		--transition-s: 0.1s;
		--accent: #5eead4;
		--accent-secondary: #5eead450;
		color-scheme: dark;
	}
	html {
		font-family: "Inter", sans-serif;
		background: var(--background);
	}
	body {
		margin: 0;
		height: 100vh;
		color: var(--text-secondary);
	}
	code {
		font-family:
			Menlo,
			Monaco,
			Lucida Console,
			Liberation Mono,
			DejaVu Sans Mono,
			Bitstream Vera Sans Mono,
			Courier New,
			monospace;
	}
	#background {
		width: 100vw;
		height: 100vh;
		position: fixed;
		top: 0;
		left: 0;
		overflow: hidden;
		pointer-events: none;
		z-index: -1;
	}
	#blob {
		position: absolute;
		background-color: white;
		height: 500px;
		aspect-ratio: 1.5;
		left: 50%;
		top: 50%;
		translate: -50% -50%;
		border-radius: 50%;
		background: linear-gradient(0.25turn, #222d46, #0f1e42);
		animation: rotate 10s linear infinite;
		z-index: 1;
	}
	#blur {
		height: 100%;
		width: 100%;
		position: absolute;
		backdrop-filter: blur(200px);
		z-index: 2;
	}

	@keyframes rotate {
		from {
			rotate: 0deg;
		}

		to {
			rotate: 360deg;
		}
	}
</style>
